{"version":3,"file":"static/js/38.8899c4e6.chunk.js","mappings":"6JAEMA,EAAa,WACjB,OACE,iBAAKC,UAAU,UAAf,WACE,gBAAKA,UAAU,UACf,gBAAKA,UAAU,UACf,gBAAKA,UAAU,WAGpB,C,kHCJYC,EAAmC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACjD,OACE,iBAAKF,UAAU,kBAAf,WACE,kBAAOG,KAAK,OAAOC,GAAG,OAAOC,YAAY,IAAIC,SAAUJ,KACvD,kBAAOK,QAAQ,OAAf,SAAsB,UACtB,gBAAKP,UAAU,gBAGpB,E,iBC0DD,EA7DoB,WAClB,OAAwBQ,EAAAA,EAAAA,UAAoB,IAA5C,eAAOC,EAAP,KAAaC,EAAb,MAEAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,GAAUF,EACX,GAAE,IACH,IAaMG,EAAgB,SAACC,GACrB,IAAMC,EAASD,EAAEE,cAAcZ,GACzBa,EAAWR,EAAKS,QAAO,qBAAGC,MAAkBJ,CAArB,IAC7BL,EAAQO,GACRG,aAAaC,QAAQ,UAAWC,KAAKC,UAAUN,GAChD,EACKO,EAAe,WACnB,IAAMC,EAASC,KAAKC,MAAsB,GAAhBD,KAAKD,UAC/B,OAAIA,EAAS,GAAqB,KAAhBhB,EAAKmB,OACd,UACEH,EAAS,GAAqB,KAAhBhB,EAAKmB,OACrB,eADF,CAGR,EACD,OACE,iBAAK5B,UAAU,OAAf,WACE,mBAAQA,UAAU,SAAlB,SAA2B,eAC3B,iBAAKA,UAAU,YAAf,WACE,iBAAKA,UAAU,UAAf,WACE,SAACC,EAAD,CAAiBC,eA7BF,SAACY,GACtB,IAAMC,EAASD,EAAEE,cAAca,MAAMC,cAI/Bb,EAPCK,KAAKS,MAAMX,aAAaY,QAAQ,YAAc,MAO1Bd,QAAO,qBAAGC,IAC/BW,cAAcG,SAASlB,EADK,IAGlCL,EAAQO,EACT,IAqBQR,EAAKyB,KAAI,YAAc,IAAXf,EAAU,EAAVA,IACX,OACE,UAAC,KAAD,CAAMgB,GAAE,UAAKhB,GAAOnB,UAAU,UAA9B,WACE,iBAAMA,UAAU,OAAhB,SAAwBmB,KACxB,iBAAMnB,UAAU,SAASoC,MAAO,CAAEC,MAAM,GAAD,OAAKb,MAA5C,SAAgE,YAGhE,mBAAQxB,UAAU,WAAWI,GAAIe,EAAKmB,QAASzB,EAA/C,SAA8D,QALnBM,EAUhD,QAEH,SAAC,EAAAoB,SAAD,CAAUC,UAAU,SAACzC,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,WAKT,C,oHC/DK0C,EAAS,mCAAG,wGACOC,EAAAA,EAAAA,IAAA,UAHT,uCAEE,uBACRC,EADQ,EACRA,KACFC,EAAWD,EAAKE,QAAQC,MAAM,GAAI,IAFxB,kBAGTF,GAHS,2CAAH,qDAKFhC,EAAY,SAACF,GACxB,IACE,IAAMqC,EAAwBzB,KAAKS,MACjCX,aAAaY,QAAQ,YAAc,QAErCtB,EAAQqC,GAAUA,EAAOnB,OAAS,EAAImB,EAASN,IAGhD,CAFC,MAAOO,GACPC,QAAQC,IAAIF,EACb,CACF,EACYG,EAAa,mCAAG,WAC3BC,EACAC,EACA3C,GAH2B,yFAMzB2C,GAAW,GANc,SAONZ,IAPM,OAOnBE,EAPmB,OAQnBzB,EAASyB,EAAKzB,QAAO,qBAAGC,MAAkBiC,CAArB,IAC3B1C,EAAQQ,GATiB,gDAWzB+B,QAAQC,IAAR,MAXyB,yBAazBG,GAAW,GAbc,4EAAH,yD","sources":["components/Loader/Loader.tsx","components/SideBar/Search/SearchComponent.tsx","components/SideBar/Sidebar.tsx","components/dataFetch/dataFetch.ts"],"sourcesContent":["import React, { FC } from \"react\";\r\nimport \"./loader.css\";\r\nconst Loader: FC = () => {\r\n  return (\r\n    <div className=\"spinner\">\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n      <div className=\"part\"></div>\r\n    </div>\r\n  );\r\n};\r\nexport { Loader };\r\n","import React from \"react\";\r\nimport \"./search.css\";\r\ninterface Props {\r\n  handleOnChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}\r\n\r\nexport const SearchComponent: React.FC<Props> = ({ handleOnChange }) => {\r\n  return (\r\n    <div className=\"input-container\">\r\n      <input type=\"text\" id=\"name\" placeholder=\" \" onChange={handleOnChange} />\r\n      <label htmlFor=\"name\">Name</label>\r\n      <div className=\"underline\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import \"./sidebar.css\";\r\n\r\nimport React, { FC, useEffect, useState, ChangeEvent, Suspense } from \"react\";\r\nimport { Link, Outlet, useLocation } from \"react-router-dom\";\r\nimport { SearchComponent } from \"./Search/SearchComponent\";\r\nimport { Loader } from \"../Loader/Loader\";\r\nimport { fetchData } from \"../dataFetch/dataFetch\";\r\ntype Contact = {\r\n  API: string;\r\n};\r\n\r\nconst Sidebar: FC = () => {\r\n  const [list, setList] = useState<Contact[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchData(setList);\r\n  }, []);\r\n  const getLocaleItem = () => {\r\n    return JSON.parse(localStorage.getItem(\"contact\") || \"[]\") as Contact[];\r\n  };\r\n  const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const search = e.currentTarget.value.toLowerCase();\r\n\r\n    const localList = getLocaleItem();\r\n\r\n    const filtered = localList.filter(({ API }) =>\r\n      API.toLowerCase().includes(search)\r\n    );\r\n    setList(filtered);\r\n  };\r\n  const deleteOnCLick = (e: React.MouseEvent<HTMLButtonElement>) => {\r\n    const search = e.currentTarget.id;\r\n    const filtered = list.filter(({ API }) => API !== search);\r\n    setList(filtered);\r\n    localStorage.setItem(\"contact\", JSON.stringify(filtered));\r\n  };\r\n  const randomOnline = (): string | undefined => {\r\n    const random = Math.floor(Math.random() * 10);\r\n    if (random > 5 && list.length === 10) {\r\n      return \"#00FF00\";\r\n    } else if (random < 5 && list.length === 10) {\r\n      return \"#333333\";\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"main\">\r\n      <header className=\"header\">Messenger</header>\r\n      <div className=\"container\">\r\n        <div className=\"sidebar\">\r\n          <SearchComponent handleOnChange={handleOnChange} />\r\n          {list.map(({ API }) => {\r\n            return (\r\n              <Link to={`${API}`} className=\"contact\" key={API}>\r\n                <span className=\"name\">{API}</span>\r\n                <span className=\"status\" style={{ color: `${randomOnline()}` }}>\r\n                  Online\r\n                </span>\r\n                <button className=\"btn_item\" id={API} onClick={deleteOnCLick}>\r\n                  X\r\n                </button>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n        <Suspense fallback={<Loader />}>\r\n          <Outlet />\r\n        </Suspense>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import axios from \"axios\";\r\ninterface APIEntry {\r\n  API: string;\r\n  Description?: string;\r\n}\r\nconst baseUrl = \"https://api.publicapis.org/entries\";\r\n\r\nconst fetchBase = async (): Promise<APIEntry[]> => {\r\n  const { data } = await axios.get(`${baseUrl}`);\r\n  const listInfo = data.entries.slice(10, 20);\r\n  return listInfo;\r\n};\r\nexport const fetchData = (setList: Function) => {\r\n  try {\r\n    const locale: string | null = JSON.parse(\r\n      localStorage.getItem(\"contact\") || \"null\"\r\n    );\r\n    setList(locale && locale.length > 0 ? locale : fetchBase());\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\nexport const fetchTextChat = async (\r\n  chatId: string,\r\n  setLoading: Function,\r\n  setList: Function\r\n) => {\r\n  try {\r\n    setLoading(true);\r\n    const data = await fetchBase();\r\n    const filter = data.filter(({ API }) => API === chatId);\r\n    setList(filter);\r\n  } catch (err) {\r\n    console.log(err);\r\n  } finally {\r\n    setLoading(false);\r\n  }\r\n};\r\n"],"names":["Loader","className","SearchComponent","handleOnChange","type","id","placeholder","onChange","htmlFor","useState","list","setList","useEffect","fetchData","deleteOnCLick","e","search","currentTarget","filtered","filter","API","localStorage","setItem","JSON","stringify","randomOnline","random","Math","floor","length","value","toLowerCase","parse","getItem","includes","map","to","style","color","onClick","Suspense","fallback","fetchBase","axios","data","listInfo","entries","slice","locale","err","console","log","fetchTextChat","chatId","setLoading"],"sourceRoot":""}